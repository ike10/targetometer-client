{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/oche/Projects/Targetometer/Client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/oche/Projects/Targetometer/Client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/oche/Projects/Targetometer/Client/context/AuthContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState } from \"react\";\nimport router, { useRouter } from 'next/router';\nimport axios from \"axios\";\nvar AuthContextDefaultValues = {\n  user: []\n};\nvar AuthContext = /*#__PURE__*/createContext(AuthContextDefaultValues);\n_c = AuthContext;\nvar BASE_URL = 'https://targetometer-server.herokuapp.com/api/v1/auth';\nexport function useAuth() {\n  _s();\n\n  return useContext(AuthContext);\n}\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function AuthProvider(_ref) {\n  _s2();\n\n  var children = _ref.children;\n\n  var _useState = useState([]),\n      user = _useState[0],\n      setUser = _useState[1];\n\n  var _useState2 = useState([]),\n      userInfo = _useState2[0],\n      setUserInfo = _useState2[1];\n\n  var _useState3 = useState(false),\n      isLoading = _useState3[0],\n      setIsLoading = _useState3[1]; // const [single_route, setSingle_route] = useState([])\n\n\n  var _useState4 = useState(''),\n      serverMessage = _useState4[0],\n      setServerMessage = _useState4[1];\n\n  var sign_up = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(email, password, firstname, lastname, confirmpassword) {\n      var response, result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(password === confirmpassword)) {\n                _context.next = 19;\n                break;\n              }\n\n              _context.prev = 1;\n              setIsLoading(true);\n              _context.next = 5;\n              return fetch(\"\".concat(BASE_URL, \"/createaccount\"), {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json' // 'Content-Type': 'application/x-www-form-urlencoded',\n\n                },\n                body: JSON.stringify({\n                  firstname: firstname,\n                  lastname: lastname,\n                  password: password,\n                  email: email\n                })\n              });\n\n            case 5:\n              response = _context.sent;\n              _context.next = 8;\n              return response.json();\n\n            case 8:\n              result = _context.sent;\n              // console.log(result)\n              setServerMessage(\"Account Created Successfully, please verify email\");\n              setTimeout(function () {\n                router.push(\"/verifyuser\");\n              }, 30000);\n              _context.next = 17;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](1);\n              setServerMessage(_context.t0.message);\n              setIsLoading(false);\n\n            case 17:\n              _context.next = 20;\n              break;\n\n            case 19:\n              setServerMessage('password and confirm password does not match');\n\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 13]]);\n    }));\n\n    return function sign_up(_x, _x2, _x3, _x4, _x5) {\n      return _ref2.apply(this, arguments);\n    };\n  }(); // verify account\n\n\n  var verify_user = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(otp) {\n      var response, result;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              setIsLoading(true);\n              _context2.next = 4;\n              return fetch(\"\".concat(BASE_URL, \"/verifyaccount\"), {\n                method: 'PUT',\n                headers: {\n                  'Content-Type': 'application/json' // 'Content-Type': 'application/x-www-form-urlencoded',\n\n                },\n                body: JSON.stringify({\n                  token: otp\n                })\n              });\n\n            case 4:\n              response = _context2.sent;\n              _context2.next = 7;\n              return response.json();\n\n            case 7:\n              result = _context2.sent;\n              setServerMessage('Email Verified Please Login');\n              setTimeout(function () {\n                router.push(\"/\");\n              }, 30000);\n              _context2.next = 17;\n              break;\n\n            case 12:\n              _context2.prev = 12;\n              _context2.t0 = _context2[\"catch\"](0);\n              setServerMessage(\"Error verifiying token\");\n              setIsLoading(false);\n              router.push(\"/\");\n\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 12]]);\n    }));\n\n    return function verify_user(_x6) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var sign_in = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(email, password) {\n      var response, result, firstname, lastname;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              setIsLoading(true);\n              _context3.next = 4;\n              return fetch(\"\".concat(BASE_URL, \"/login\"), {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json' // 'Content-Type': 'application/x-www-form-urlencoded',\n\n                },\n                body: JSON.stringify({\n                  password: password,\n                  email: email\n                })\n              });\n\n            case 4:\n              response = _context3.sent;\n              _context3.next = 7;\n              return response.json();\n\n            case 7:\n              result = _context3.sent;\n              // console.log(result)\n              localStorage.setItem('token', result.token);\n              setUser(result.data);\n              localStorage.setItem('firstname', result.data.firstname);\n              localStorage.setItem('lastname', result.data.lastname);\n              localStorage.setItem('userID', result.data.userID);\n              firstname = localStorage.getItem('firstname');\n              lastname = localStorage.getItem('lastname');\n              setServerMessage(result.message);\n              router.push(\"/\".concat(firstname, \"_\").concat(lastname));\n              _context3.next = 23;\n              break;\n\n            case 19:\n              _context3.prev = 19;\n              _context3.t0 = _context3[\"catch\"](0);\n              setServerMessage(_context3.t0.message);\n              setIsLoading(false);\n\n            case 23:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 19]]);\n    }));\n\n    return function sign_in(_x7, _x8) {\n      return _ref4.apply(this, arguments);\n    };\n  }(); // const get_single_route = (routeId) =>{\n  //     console.log(routeId)\n  //     let url = `https://backend.cruise9ja.com/api/v1/routes/${abuwala1}`\n  //     fetch(url)\n  //       .then(response => response.json())\n  //       .then(data => {\n  //           console.log(data)\n  //           setSingle_route([...data.result])\n  //           console.log(single_route)\n  //       })\n  //       .catch(err => {\n  //           setErrorMessage(err.message)\n  //         })\n  //     // const router = useRouter()\n  //     // router.push('/searchresults')\n  // }\n\n\n  var value = {\n    user: user,\n    sign_in: sign_in,\n    sign_up: sign_up,\n    serverMessage: serverMessage,\n    isLoading: isLoading,\n    verify_user: verify_user,\n    setIsLoading: setIsLoading,\n    setServerMessage: setServerMessage\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: value,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s2(AuthProvider, \"qPAxuCRrH2eOpwqgfownzXbnleU=\");\n\n_c2 = AuthProvider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AuthContext\");\n$RefreshReg$(_c2, \"AuthProvider\");","map":{"version":3,"sources":["/Users/oche/Projects/Targetometer/Client/context/AuthContext.js"],"names":["createContext","useContext","useState","router","useRouter","axios","AuthContextDefaultValues","user","AuthContext","BASE_URL","useAuth","AuthProvider","children","setUser","userInfo","setUserInfo","isLoading","setIsLoading","serverMessage","setServerMessage","sign_up","email","password","firstname","lastname","confirmpassword","fetch","method","headers","body","JSON","stringify","response","json","result","setTimeout","push","message","verify_user","otp","token","sign_in","localStorage","setItem","data","userID","getItem","value"],"mappings":"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","sourcesContent":["import { createContext, useContext, useState } from \"react\";\nimport router, {useRouter} from 'next/router'\nimport axios from \"axios\";\nconst AuthContextDefaultValues={\n    user:[],\n \n   \n}\n\nconst AuthContext = createContext(AuthContextDefaultValues)\n\nconst BASE_URL = 'https://targetometer-server.herokuapp.com/api/v1/auth'\nexport function useAuth(){\n    return useContext(AuthContext)\n}\n\nexport function AuthProvider({children}){\n    const [user, setUser] = useState([])\n    \n    const [userInfo, setUserInfo] = useState([])\n    const [isLoading, setIsLoading] = useState(false)\n    // const [single_route, setSingle_route] = useState([])\n    const [serverMessage, setServerMessage] = useState('')\n    const sign_up =  async(email, password, firstname, lastname, confirmpassword) =>{\n        if (password === confirmpassword){\n            try{\n                setIsLoading(true)\n                let response = await fetch(`${BASE_URL}/createaccount`, {\n                            method: 'POST',\n                            headers: {\n                                'Content-Type': 'application/json'\n                                // 'Content-Type': 'application/x-www-form-urlencoded',\n                              },\n                            body: JSON.stringify({\n                                firstname: firstname,\n                                lastname: lastname,\n                                password: password,\n                                email:email, \n                                \n                            })\n                       })\n                       \n                    const result = await response.json()\n                    // console.log(result)\n                   \n                    setServerMessage(\"Account Created Successfully, please verify email\")\n                    setTimeout(()=>{\n                                router.push(`/verifyuser`)\n                            }, 30000)\n            }catch(err){\n                setServerMessage(err.message)\n                setIsLoading(false)\n            }\n    \n        }else{\n            setServerMessage('password and confirm password does not match')\n        }\n        \n\n    //     fetch(`${BASE_URL}/createaccount`, {\n    //         method: 'POST',\n    //         headers: {\n    //             'Content-Type': 'application/json'\n    //             // 'Content-Type': 'application/x-www-form-urlencoded',\n    //           },\n    //         body: JSON.stringify({\n    //             firstname: firstname,\n    //             lastname: lastname,\n    //             password: password,\n    //             email:email, \n                \n    //         })\n    //     })\n    //     .then(response => response.json())\n    //     .then(data => {\n           \n    //     setServerMessage(\"Account Created Successfully, please login to access dashboard\")\n    //     setTimeout(()=>{\n    //         router.push(`/`)\n    //     }, 30000)\n        \n    //    })\n    //     .catch(err=>{\n    //         setServerMessage(err.message)\n    //     })\n    }\n// verify account\n    const verify_user = async (otp) => {\n        try{\n           setIsLoading(true)\n           let response = await fetch(`${BASE_URL}/verifyaccount`, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json'\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n              },\n            body: JSON.stringify({\n                \n                token: otp,\n               \n               \n           })\n        })\n        const result = await response.json()\n        setServerMessage('Email Verified Please Login')\n        setTimeout(()=>{\n            router.push(`/`)\n        }, 30000)\n        }catch(error){\n            setServerMessage(\"Error verifiying token\") \n           setIsLoading(false) \n           router.push(`/`)\n        }\n    }\n\n    const sign_in = async (email, password) =>{\n\n       try{\n        setIsLoading(true)\n            let response = await fetch(`${BASE_URL}/login`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                    // 'Content-Type': 'application/x-www-form-urlencoded',\n                  },\n                body: JSON.stringify({\n                    \n                    password: password,\n                    email:email, \n                   \n               })\n            })\n            \n            const result = await response.json()\n            // console.log(result)\n           \n            localStorage.setItem('token', result.token)\n        \n            setUser(result.data)\n            localStorage.setItem('firstname', result.data.firstname )\n            localStorage.setItem('lastname',result.data.lastname)\n            localStorage.setItem('userID', result.data.userID)\n    \n            \n            const firstname = localStorage.getItem('firstname')\n            const lastname = localStorage.getItem('lastname')\n            \n            setServerMessage(result.message)\n            router.push(`/${firstname}_${lastname}`)\n       } catch(err){\n        setServerMessage(err.message) \n        setIsLoading(false)\n       }\n        \n        // fetch(`${BASE_URL}/login`, {\n        //     method: 'POST',\n        //     headers: {\n        //         'Content-Type': 'application/json'\n        //         // 'Content-Type': 'application/x-www-form-urlencoded',\n        //       },\n        //     body: JSON.stringify({\n                \n        //         password: password,\n        //         email:email, \n               \n        //     })\n        // })\n    //     .then(response => response.json())\n    //     .then(result => {\n        \n    //      localStorage.setItem('token', result.token)\n        \n    //     setUser(result.data)\n    //     localStorage.setItem('firstname', result.data.firstname )\n    //     localStorage.setItem('lastname',result.data.lastname)\n    //     localStorage.setItem('userID', result.data.userID)\n\n        \n    //     const firstname = localStorage.getItem('firstname')\n    //     const lastname = localStorage.getItem('lastname')\n        \n    //     setServerMessage(result.message)\n    //     router.push(`/${firstname}_${lastname}`)\n    //    })\n    //     .catch(err=>{\n    //         setServerMessage(err.message)\n    //     })\n        //     const result = response.json()\n        //     console.log(result)\n        //     await localStorage.setItem('token', result.data.token)\n        //     await localStorage.setItem('user', result.data.user)\n        //     setServerMessage(result.data.message)\n        //     router.push(`/:${user.name}`)\n        //   }catch(err){\n        //     setServerMessage(err.message)\n        //   }\n         \n    }\n\n    // const get_single_route = (routeId) =>{\n\n    //     console.log(routeId)\n\n    //     let url = `https://backend.cruise9ja.com/api/v1/routes/${abuwala1}`\n    //     fetch(url)\n    //       .then(response => response.json())\n    //       .then(data => {\n    //           console.log(data)\n    //           setSingle_route([...data.result])\n    //           console.log(single_route)\n    //       })\n    //       .catch(err => {\n    //           setErrorMessage(err.message)\n              \n    //         })\n    //     // const router = useRouter()\n    //     // router.push('/searchresults')\n    // }\n\n    const value = {\n        user,\n        sign_in,\n        sign_up,\n        serverMessage,\n       isLoading,\n        verify_user,\n        setIsLoading,\n        setServerMessage\n    }\n\n    return (\n        <>\n            <AuthContext.Provider value={value}>\n               {children}\n            </AuthContext.Provider>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}