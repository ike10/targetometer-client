{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/oche/Projects/Targetometer/Client/context/AuthContext.js\";\nimport axios from \"axios\";\nimport { createContext, useState } from \"react\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst BASE_URL = 'https://targetometer-server.herokuapp.com/api/v1/auth';\nexport const AuthContextProvider = ({\n  children\n}) => {\n  const {\n    0: user,\n    1: setUser\n  } = useState(null);\n  const {\n    0: isLoggedIn,\n    1: setIsLoggedIn\n  } = useState(false);\n\n  const signIn = (email, password) => {\n    console.log(email, password);\n  };\n\n  const signUp = (firstname, lastname, email, password, confirmpassword) => {\n    axios.post(`${BASE_URL}/createaccount`, {}); // alert('button fired')\n    // console.log(firstname, lastname, email, password, confirmpassword)\n  };\n\n  const signOut = () => {// setIsLoggedIn(false)\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: (user, isLoggedIn, signIn, signOut, signUp),\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\nexport default AuthContext;","map":{"version":3,"sources":["/Users/oche/Projects/Targetometer/Client/context/AuthContext.js"],"names":["axios","createContext","useState","AuthContext","BASE_URL","AuthContextProvider","children","user","setUser","isLoggedIn","setIsLoggedIn","signIn","email","password","console","log","signUp","firstname","lastname","confirmpassword","post","signOut"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAUC,aAAV,EAAyBC,QAAzB,QAAyC,OAAzC;AAEA,MAAMC,WAAW,gBAAGF,aAAa,EAAjC;AACA,MAAMG,QAAQ,GAAG,uDAAjB;AACA,OAAO,MAAMC,mBAAmB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AAC9C,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBN,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM;AAAA,OAACO,UAAD;AAAA,OAAaC;AAAb,MAA8BR,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMS,MAAM,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAoB;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAAmBC,QAAnB;AACH,GAFD;;AAIA,QAAMG,MAAM,GAAE,CAAEC,SAAF,EAAaC,QAAb,EAAuBN,KAAvB,EAA8BC,QAA9B,EAAwCM,eAAxC,KAA0D;AAEpEnB,IAAAA,KAAK,CAACoB,IAAN,CAAY,GAAEhB,QAAS,gBAAvB,EAAuC,EAAvC,EAFoE,CAKpE;AACA;AACH,GAPD;;AASA,QAAMiB,OAAO,GAAG,MAAK,CACjB;AACH,GAFD;;AAIA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,GAAEd,IAAI,EAAEE,UAAF,EAAcE,MAAd,EAAsBU,OAAtB,EAA+BL,MAArC,CAA3B;AAAA,cACKV;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA1BM;AA4BP,eAAeH,WAAf","sourcesContent":["import axios from \"axios\";\nimport {  createContext, useState } from \"react\";\n\nconst AuthContext = createContext()\nconst BASE_URL = 'https://targetometer-server.herokuapp.com/api/v1/auth'\nexport const AuthContextProvider = ({children}) =>{\n    const [user, setUser] = useState(null)\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\n\n    const signIn = (email, password) =>{\n        console.log(email, password )\n    }\n\n    const signUp =( firstname, lastname, email, password, confirmpassword)=>{\n        \n        axios.post(`${BASE_URL}/createaccount`,{\n\n        } )\n        // alert('button fired')\n        // console.log(firstname, lastname, email, password, confirmpassword)\n    }\n\n    const signOut = () =>{\n        // setIsLoggedIn(false)\n    }\n\n    return (\n        <AuthContext.Provider value={user, isLoggedIn, signIn, signOut, signUp}>\n            {children}\n        </AuthContext.Provider>\n    )\n}\n\nexport default AuthContext"]},"metadata":{},"sourceType":"module"}