{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/oche/Projects/Targetometer/Client/context/TaskContext.js\";\nimport { createContext, useState } from \"react\";\nconst TaskContext = /*#__PURE__*/createContext({\n  Tasks: [],\n  singleTask: null,\n  errormessage: ''\n});\nexport const TaskContextProvider = ({\n  children\n}) => {\n  const {\n    0: Task,\n    1: setTask\n  } = useState([]);\n  const {\n    0: singleTask,\n    1: setSingleTask\n  } = useState(null);\n  const {\n    0: errorMessage,\n    1: setErrorMessage\n  } = useState('');\n\n  const get_all_Tasks = routeID => {\n    alert(routeID);\n  };\n\n  const get_single_Task = (taskID, projectID) => {\n    alert(taskID);\n  };\n\n  const create_single_Task = (title, description, startdate, enddate) => {\n    alert(title, description, startdate, enddate);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TaskContext.Provider, {\n    value: (Task, singleTask, errorMessage, get_all_Tasks, get_single_Task, create_single_Task),\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\nexport default TaskContext;","map":{"version":3,"sources":["/Users/oche/Projects/Targetometer/Client/context/TaskContext.js"],"names":["createContext","useState","TaskContext","Tasks","singleTask","errormessage","TaskContextProvider","children","Task","setTask","setSingleTask","errorMessage","setErrorMessage","get_all_Tasks","routeID","alert","get_single_Task","taskID","projectID","create_single_Task","title","description","startdate","enddate"],"mappings":";;AAAA,SAAUA,aAAV,EAAyBC,QAAzB,QAAyC,OAAzC;AAEA,MAAMC,WAAW,gBAAGF,aAAa,CAAC;AAC9BG,EAAAA,KAAK,EAAE,EADuB;AAE9BC,EAAAA,UAAU,EAAE,IAFkB;AAG9BC,EAAAA,YAAY,EAAE;AAHgB,CAAD,CAAjC;AAMA,OAAO,MAAMC,mBAAmB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AAC9C,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAA,OAACG,UAAD;AAAA,OAAaM;AAAb,MAA8BT,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM;AAAA,OAACU,YAAD;AAAA,OAAeC;AAAf,MAAkCX,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMY,aAAa,GAAIC,OAAD,IAAY;AAC9BC,IAAAA,KAAK,CAACD,OAAD,CAAL;AACH,GAFD;;AAIA,QAAME,eAAe,GAAE,CAACC,MAAD,EAASC,SAAT,KAAqB;AACxCH,IAAAA,KAAK,CAACE,MAAD,CAAL;AACH,GAFD;;AAIA,QAAME,kBAAkB,GAAG,CAACC,KAAD,EAAQC,WAAR,EAAqBC,SAArB,EAAgCC,OAAhC,KAA2C;AAClER,IAAAA,KAAK,CAACK,KAAD,EAAQC,WAAR,EAAqBC,SAArB,EAAgCC,OAAhC,CAAL;AACH,GAFD;;AAIA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,GAAEf,IAAI,EAAEJ,UAAF,EAAcO,YAAd,EAA4BE,aAA5B,EAA2CG,eAA3C,EAA4DG,kBAAlE,CAA3B;AAAA,cACKZ;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAtBM;AAwBP,eAAeL,WAAf","sourcesContent":["import {  createContext, useState } from \"react\";\n\nconst TaskContext = createContext({\n    Tasks: [],\n    singleTask: null,\n    errormessage: ''\n})\n\nexport const TaskContextProvider = ({children}) =>{\n    const [Task, setTask] = useState([])\n    const [singleTask, setSingleTask] = useState(null)\n    const [errorMessage, setErrorMessage] = useState('')\n\n    const get_all_Tasks = (routeID) =>{\n        alert(routeID )\n    }\n\n    const get_single_Task =(taskID, projectID)=>{\n        alert(taskID)\n    }\n\n    const create_single_Task = (title, description, startdate, enddate) =>{\n        alert(title, description, startdate, enddate)\n    }\n\n    return (\n        <TaskContext.Provider value={Task, singleTask, errorMessage, get_all_Tasks, get_single_Task, create_single_Task}>\n            {children}\n        </TaskContext.Provider>\n    )\n}\n\nexport default TaskContext"]},"metadata":{},"sourceType":"module"}