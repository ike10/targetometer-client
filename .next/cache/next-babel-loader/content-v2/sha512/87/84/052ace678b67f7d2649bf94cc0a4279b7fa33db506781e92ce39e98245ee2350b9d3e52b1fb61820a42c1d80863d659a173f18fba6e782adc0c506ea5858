{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"/Users/oche/Projects/Targetometer/Client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/oche/Projects/Targetometer/Client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/oche/Projects/Targetometer/Client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/oche/Projects/Targetometer/Client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/oche/Projects/Targetometer/Client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/oche/Projects/Targetometer/Client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/oche/Projects/Targetometer/Client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/Users/oche/Projects/Targetometer/Client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/oche/Projects/Targetometer/Client/pages/components/puzzlecomponent.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport originalImage from './images/ny_original.jpg'; // import './App.css';\n// import '../../styles/app.css'\n\nvar Jigsaw = /*#__PURE__*/function (_Component) {\n  _inherits(Jigsaw, _Component);\n\n  var _super = _createSuper(Jigsaw);\n\n  function Jigsaw() {\n    var _this;\n\n    _classCallCheck(this, Jigsaw);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      pieces: [],\n      shuffled: [],\n      solved: []\n    });\n\n    return _this;\n  }\n\n  _createClass(Jigsaw, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var pieces = _toConsumableArray(Array(40)).map(function (_, i) {\n        return {\n          img: \"ny_\".concat(('0' + (i + 1)).substr(-2), \".jpg\"),\n          order: i,\n          board: 'shuffled'\n        };\n      });\n\n      this.setState({\n        pieces: pieces,\n        shuffled: this.shufflePieces(pieces),\n        solved: _toConsumableArray(Array(40))\n      });\n    }\n  }, {\n    key: \"handleDrop\",\n    value: function handleDrop(e, index, targetName) {\n      var _this$setState;\n\n      var target = this.state[targetName];\n      if (target[index]) return;\n      var pieceOrder = e.dataTransfer.getData('text');\n      var pieceData = this.state.pieces.find(function (p) {\n        return p.order === +pieceOrder;\n      });\n      var origin = this.state[pieceData.board];\n      if (targetName === pieceData.board) target = origin;\n      origin[origin.indexOf(pieceData)] = undefined;\n      target[index] = pieceData;\n      pieceData.board = targetName;\n      this.setState((_this$setState = {}, _defineProperty(_this$setState, pieceData.board, origin), _defineProperty(_this$setState, targetName, target), _this$setState));\n    }\n  }, {\n    key: \"handleDragStart\",\n    value: function handleDragStart(e, order) {\n      var dt = e.dataTransfer;\n      dt.setData('text/plain', order);\n      dt.effectAllowed = 'move';\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"jigsaw\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"jigsaw__shuffled-board\",\n          children: this.state.shuffled.map(function (piece, i) {\n            return _this2.renderPieceContainer(piece, i, 'shuffled');\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"jigsaw__solved-board\",\n          style: {\n            backgroundImage: \"url(\".concat(originalImage, \")\")\n          },\n          children: this.state.solved.map(function (piece, i) {\n            return _this2.renderPieceContainer(piece, i, 'solved');\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this);\n    }\n  }, {\n    key: \"renderPieceContainer\",\n    value: function renderPieceContainer(piece, index, boardName) {\n      var _this3 = this;\n\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        onDragOver: function onDragOver(e) {\n          return e.preventDefault();\n        },\n        onDrop: function onDrop(e) {\n          return _this3.handleDrop(e, index, boardName);\n        },\n        children: piece && /*#__PURE__*/_jsxDEV(\"img\", {\n          draggable: true,\n          onDragStart: function onDragStart(e) {\n            return _this3.handleDragStart(e, piece.order);\n          },\n          src: require(\"./images/\".concat(piece.img))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 20\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this);\n    }\n  }, {\n    key: \"shufflePieces\",\n    value: function shufflePieces(pieces) {\n      var shuffled = _toConsumableArray(pieces);\n\n      for (var i = shuffled.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var tmp = shuffled[i];\n        shuffled[i] = shuffled[j];\n        shuffled[j] = tmp;\n      }\n\n      return shuffled;\n    }\n  }]);\n\n  return Jigsaw;\n}(Component);\n\nexport default Jigsaw; // ReactDOM.render(<Jigsaw />, document.querySelector('#app-root'));","map":{"version":3,"sources":["/Users/oche/Projects/Targetometer/Client/pages/components/puzzlecomponent.js"],"names":["React","Component","ReactDOM","originalImage","Jigsaw","pieces","shuffled","solved","Array","map","_","i","img","substr","order","board","setState","shufflePieces","e","index","targetName","target","state","pieceOrder","dataTransfer","getData","pieceData","find","p","origin","indexOf","undefined","dt","setData","effectAllowed","piece","renderPieceContainer","backgroundImage","boardName","preventDefault","handleDrop","handleDragStart","require","length","j","Math","floor","random","tmp"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport originalImage from './images/ny_original.jpg';\n// import './App.css';\n// import '../../styles/app.css'\nclass Jigsaw extends Component {\n  state = {\n    pieces: [],\n    shuffled: [],\n    solved: []\n  };\n\n  componentDidMount() {\n    const pieces = [...Array(40)]\n      .map((_, i) => (\n        {\n          img: `ny_${('0' + (i + 1)).substr(-2)}.jpg`,\n          order: i,\n          board: 'shuffled'\n        }\n      ));\n\n    this.setState({\n      pieces,\n      shuffled: this.shufflePieces(pieces),\n      solved: [...Array(40)]\n    });\n  }\n\n  handleDrop(e, index, targetName) {\n    let target = this.state[targetName];\n    if (target[index]) return;\n\n    const pieceOrder = e.dataTransfer.getData('text');\n    const pieceData = this.state.pieces.find(p => p.order === +pieceOrder);\n    const origin = this.state[pieceData.board];\n\n    if (targetName === pieceData.board) target = origin;\n    origin[origin.indexOf(pieceData)] = undefined;\n    target[index] = pieceData;\n    pieceData.board = targetName;\n\n    this.setState({ [pieceData.board]: origin, [targetName]: target })\n  }\n\n  handleDragStart(e, order) {\n    const dt = e.dataTransfer;\n    dt.setData('text/plain', order);\n    dt.effectAllowed = 'move';\n  }\n\n  render() {\n    return (\n      <div className=\"jigsaw\">\n        <ul className=\"jigsaw__shuffled-board\">\n          {this.state.shuffled.map((piece, i) => this.renderPieceContainer(piece, i, 'shuffled'))}\n        </ul>\n        <ol className=\"jigsaw__solved-board\" style={{ backgroundImage: `url(${originalImage})` }}>\n          {this.state.solved.map((piece, i) => this.renderPieceContainer(piece, i, 'solved'))}\n        </ol>\n      </div>\n    );\n  }\n\n  renderPieceContainer(piece, index, boardName) {\n    return (\n      <li\n        key={index}\n        onDragOver={(e) => e.preventDefault()}\n        onDrop={(e) => this.handleDrop(e, index, boardName)}>\n        {\n          piece && <img\n            draggable\n            onDragStart={(e) => this.handleDragStart(e, piece.order)}\n            src={require(`./images/${piece.img}`)} />\n        }\n      </li>\n    );\n  }\n\n  shufflePieces(pieces) {\n    const shuffled = [...pieces];\n\n    for (let i = shuffled.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      let tmp = shuffled[i];\n      shuffled[i] = shuffled[j];\n      shuffled[j] = tmp;\n    }\n\n    return shuffled;\n  }\n}\n\nexport default Jigsaw\n// ReactDOM.render(<Jigsaw />, document.querySelector('#app-root'));"]},"metadata":{},"sourceType":"module"}