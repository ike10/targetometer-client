{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"/Users/oche/Projects/Targetometer/Client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/oche/Projects/Targetometer/Client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/oche/Projects/Targetometer/Client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/oche/Projects/Targetometer/Client/context/AuthContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState } from \"react\";\nimport router, { useRouter } from 'next/router';\nimport axios from \"axios\";\nvar AuthContextDefaultValues = {\n  user: []\n};\nvar AuthContext = /*#__PURE__*/createContext(AuthContextDefaultValues);\n_c = AuthContext;\nvar BASE_URL = 'https://targetometer-server.herokuapp.com/api/v1/auth';\nvar USER_URL = 'https://targetometer-server.herokuapp.com/api/v1/users';\nexport function useAuth() {\n  _s();\n\n  return useContext(AuthContext);\n}\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function AuthProvider(_ref) {\n  _s2();\n\n  var children = _ref.children;\n\n  var _useState = useState([]),\n      user = _useState[0],\n      setUser = _useState[1];\n\n  var _useState2 = useState([]),\n      userInfo = _useState2[0],\n      setUserInfo = _useState2[1];\n\n  var _useState3 = useState(false),\n      isLoading = _useState3[0],\n      setIsLoading = _useState3[1]; // const [single_route, setSingle_route] = useState([])\n\n\n  var _useState4 = useState(''),\n      serverMessage = _useState4[0],\n      setServerMessage = _useState4[1];\n\n  var sign_up = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(email, password, firstname, lastname, confirmpassword) {\n      var response, result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(password === confirmpassword)) {\n                _context.next = 24;\n                break;\n              }\n\n              if (!(password.length > 8)) {\n                _context.next = 21;\n                break;\n              }\n\n              _context.prev = 2;\n              setIsLoading(true);\n              _context.next = 6;\n              return fetch(\"\".concat(BASE_URL, \"/createaccount\"), {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json' // 'Content-Type': 'application/x-www-form-urlencoded',\n\n                },\n                body: JSON.stringify({\n                  firstname: firstname,\n                  lastname: lastname,\n                  password: password,\n                  email: email\n                })\n              });\n\n            case 6:\n              response = _context.sent;\n              _context.next = 9;\n              return response.json();\n\n            case 9:\n              result = _context.sent;\n              // console.log(result)\n              setServerMessage(\"Account Created Successfully, please verify email\");\n              setTimeout(function () {\n                router.push(\"/verifyuser\");\n              }, 30000);\n              _context.next = 19;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](2);\n              setServerMessage(\"Welcome\");\n              setIsLoading(false);\n              console.log(er.message);\n\n            case 19:\n              _context.next = 22;\n              break;\n\n            case 21:\n              setServerMessage('Password is to much');\n\n            case 22:\n              _context.next = 25;\n              break;\n\n            case 24:\n              setServerMessage('password and confirm password does not match');\n\n            case 25:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 14]]);\n    }));\n\n    return function sign_up(_x, _x2, _x3, _x4, _x5) {\n      return _ref2.apply(this, arguments);\n    };\n  }(); // verify account\n\n\n  var verify_user = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(otp) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setServerMessage(\"Email has been verified please login\");\n              router.push('/'); // try{\n              //    setIsLoading(true)\n              //    let response = await fetch(`${BASE_URL}/verifyaccount`, {\n              //     method: 'PUT',\n              //     headers: {\n              //         'Content-Type': 'application/json'\n              //         // 'Content-Type': 'application/x-www-form-urlencoded',\n              //       },\n              //     body: JSON.stringify({\n              //         token: otp,\n              //    })\n              // })\n              // setServerMessage('Email Verified Please Login')\n              //     router.push(`/`)\n              // }catch(error){\n              //     console.log(error.message)\n              //     setServerMessage(\"Error verifiying token\") \n              //    setIsLoading(false) \n              // }\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function verify_user(_x6) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var sign_in = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(email, password) {\n      var response, result, firstname, lastname;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              setIsLoading(true);\n              _context3.next = 4;\n              return fetch(\"\".concat(BASE_URL, \"/login\"), {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json' // 'Content-Type': 'application/x-www-form-urlencoded',\n\n                },\n                body: JSON.stringify({\n                  password: password,\n                  email: email\n                })\n              });\n\n            case 4:\n              response = _context3.sent;\n              _context3.next = 7;\n              return response.json();\n\n            case 7:\n              result = _context3.sent;\n              // console.log(result)\n              localStorage.setItem('token', result.token);\n              setUser(result.data);\n              localStorage.setItem('userinfo', JSON.stringify(result.data));\n              localStorage.setItem('firstname', result.data.firstname);\n              localStorage.setItem('lastname', result.data.lastname);\n              localStorage.setItem('userID', result.data.userID);\n              firstname = localStorage.getItem('firstname');\n              lastname = localStorage.getItem('lastname');\n              setServerMessage(result.message);\n              router.push(\"/\".concat(firstname, \"_\").concat(lastname));\n              _context3.next = 24;\n              break;\n\n            case 20:\n              _context3.prev = 20;\n              _context3.t0 = _context3[\"catch\"](0);\n              setServerMessage(_context3.t0.message);\n              setIsLoading(false);\n\n            case 24:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 20]]);\n    }));\n\n    return function sign_in(_x7, _x8) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var get_user = function get_user() {\n    var userID = localStorage.getItem('userID');\n    var token = localStorage.getItem('token');\n    fetch(\"\".concat(USER_URL, \"/\").concat(userID, \"/\"), {\n      method: 'GET',\n      headers: {\n        // 'Content-Type': 'application/json',\n        'Authorization': \"Bearer \".concat(token) // 'Content-Type': 'application/x-www-form-urlencoded',\n\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (result) {\n      console.log(result.result);\n      setUser(_toConsumableArray(result.result));\n    })[\"catch\"](function (error) {\n      console.log(error.message);\n      setServerMessage('');\n    });\n  };\n\n  var delete_user = function delete_user() {\n    var userID = localStorage.getItem('userID');\n    var token = localStorage.getItem('token');\n    fetch(\"\".concat(USER_URL, \"/\").concat(userID, \"/\"), {\n      method: 'DELETE',\n      headers: {\n        // 'Content-Type': 'application/json',\n        'Authorization': \"Bearer \".concat(token) // 'Content-Type': 'application/x-www-form-urlencoded',\n\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (result) {\n      console.log(result.result);\n      setUser(_toConsumableArray(result.result));\n    })[\"catch\"](function (error) {\n      setServerMessage(error.message);\n    });\n  };\n\n  var update_user = function update_user(profileimage, address, email, contact, occupation, password) {\n    var userID = localStorage.getItem('userID');\n    var token = localStorage.getItem('token');\n    fetch(\"\".concat(USER_URL, \"/\").concat(userID, \"/\"), {\n      method: 'PUT',\n      // mode: \"no-cors\",\n      headers: {\n        // 'Content-Type': 'application/json',\n        'Content-Type': 'multipart/form-data',\n        'Authorization': \"Bearer \".concat(token) // 'Content-Type': 'application/x-www-form-urlencoded',\n\n      },\n      body: {\n        email: email,\n        profileimage: profileimage,\n        address: address,\n        contact: contact,\n        occupation: occupation,\n        password: password\n      }\n    }) // .then(response => response.json())\n    .then(function (result) {\n      setServerMessage(\"user profile updated\");\n      console.log(result.result);\n    })[\"catch\"](function (error) {\n      console.log(error.message);\n      setServerMessage('error updating user profile, please try again');\n    });\n  };\n\n  var value = {\n    user: user,\n    sign_in: sign_in,\n    sign_up: sign_up,\n    serverMessage: serverMessage,\n    isLoading: isLoading,\n    verify_user: verify_user,\n    setIsLoading: setIsLoading,\n    setServerMessage: setServerMessage,\n    get_user: get_user,\n    update_user: update_user,\n    delete_user: delete_user // delete_user,\n\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: value,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s2(AuthProvider, \"qPAxuCRrH2eOpwqgfownzXbnleU=\");\n\n_c2 = AuthProvider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AuthContext\");\n$RefreshReg$(_c2, \"AuthProvider\");","map":{"version":3,"sources":["/Users/oche/Projects/Targetometer/Client/context/AuthContext.js"],"names":["createContext","useContext","useState","router","useRouter","axios","AuthContextDefaultValues","user","AuthContext","BASE_URL","USER_URL","useAuth","AuthProvider","children","setUser","userInfo","setUserInfo","isLoading","setIsLoading","serverMessage","setServerMessage","sign_up","email","password","firstname","lastname","confirmpassword","length","fetch","method","headers","body","JSON","stringify","response","json","result","setTimeout","push","console","log","er","message","verify_user","otp","sign_in","localStorage","setItem","token","data","userID","getItem","get_user","then","error","delete_user","update_user","profileimage","address","contact","occupation","value"],"mappings":"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","sourcesContent":["import { createContext, useContext, useState } from \"react\";\nimport router, {useRouter} from 'next/router'\nimport axios from \"axios\";\nconst AuthContextDefaultValues={\n    user:[],\n \n   \n}\n\nconst AuthContext = createContext(AuthContextDefaultValues)\n\nconst BASE_URL = 'https://targetometer-server.herokuapp.com/api/v1/auth'\nconst USER_URL = 'https://targetometer-server.herokuapp.com/api/v1/users'\nexport function useAuth(){\n    return useContext(AuthContext)\n}\n\nexport function AuthProvider({children}){\n    const [user, setUser] = useState([])\n    \n    const [userInfo, setUserInfo] = useState([])\n    const [isLoading, setIsLoading] = useState(false)\n    // const [single_route, setSingle_route] = useState([])\n    const [serverMessage, setServerMessage] = useState('')\n    const sign_up =  async(email, password, firstname, lastname, confirmpassword) =>{\n\n\n        if (password === confirmpassword){\n\n            if (password.length > 8){\n                try{\n                    setIsLoading(true)\n                    let response = await fetch(`${BASE_URL}/createaccount`, {\n                                method: 'POST',\n                                headers: {\n                                    'Content-Type': 'application/json'\n                                    // 'Content-Type': 'application/x-www-form-urlencoded',\n                                  },\n                                body: JSON.stringify({\n                                    firstname: firstname,\n                                    lastname: lastname,\n                                    password: password,\n                                    email:email, \n                                    \n                                })\n                           })\n                           \n                        const result = await response.json()\n                        // console.log(result)\n                       \n                        setServerMessage(\"Account Created Successfully, please verify email\")\n                        setTimeout(()=>{\n                                    router.push(`/verifyuser`)\n                               }, 30000)\n                              \n                }catch(err){\n                    setServerMessage(\"Welcome\")\n                    setIsLoading(false)\n                    console.log(er.message)\n                }\n            }else{\n                setServerMessage('Password is to much')\n            }\n            \n    \n        }else{\n            setServerMessage('password and confirm password does not match')\n        }\n        \n\n    //     fetch(`${BASE_URL}/createaccount`, {\n    //         method: 'POST',\n    //         headers: {\n    //             'Content-Type': 'application/json'\n    //             // 'Content-Type': 'application/x-www-form-urlencoded',\n    //           },\n    //         body: JSON.stringify({\n    //             firstname: firstname,\n    //             lastname: lastname,\n    //             password: password,\n    //             email:email, \n                \n    //         })\n    //     })\n    //     .then(response => response.json())\n    //     .then(data => {\n           \n    //     setServerMessage(\"Account Created Successfully, please login to access dashboard\")\n    //     setTimeout(()=>{\n    //         router.push(`/`)\n    //     }, 30000)\n        \n    //    })\n    //     .catch(err=>{\n    //         setServerMessage(err.message)\n    //     })\n    }\n// verify account\n    const verify_user = async (otp) => {\n        setServerMessage(\"Email has been verified please login\")\n        router.push('/')\n        // try{\n        //    setIsLoading(true)\n        //    let response = await fetch(`${BASE_URL}/verifyaccount`, {\n        //     method: 'PUT',\n        //     headers: {\n        //         'Content-Type': 'application/json'\n        //         // 'Content-Type': 'application/x-www-form-urlencoded',\n        //       },\n        //     body: JSON.stringify({\n                \n        //         token: otp,\n               \n               \n        //    })\n        // })\n        \n        // setServerMessage('Email Verified Please Login')\n        \n        //     router.push(`/`)\n       \n        \n        // }catch(error){\n        //     console.log(error.message)\n        //     setServerMessage(\"Error verifiying token\") \n        //    setIsLoading(false) \n           \n        // }\n    }\n\n    const sign_in = async (email, password) =>{\n\n       try{\n        setIsLoading(true)\n            let response = await fetch(`${BASE_URL}/login`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                    // 'Content-Type': 'application/x-www-form-urlencoded',\n                  },\n                body: JSON.stringify({\n                    \n                    password: password,\n                    email:email, \n                   \n               })\n            })\n            \n            const result = await response.json()\n            // console.log(result)\n           \n            localStorage.setItem('token', result.token)\n        \n            setUser(result.data)\n           localStorage.setItem('userinfo', JSON.stringify(result.data))\n        \n            localStorage.setItem('firstname', result.data.firstname )\n            localStorage.setItem('lastname',result.data.lastname)\n            localStorage.setItem('userID', result.data.userID)\n    \n            \n            const firstname = localStorage.getItem('firstname')\n            const lastname = localStorage.getItem('lastname')\n            \n            setServerMessage(result.message)\n            router.push(`/${firstname}_${lastname}`)\n       } catch(err){\n        setServerMessage(err.message) \n        setIsLoading(false)\n       }\n    }\n\n    const get_user = ()=>{\n        const userID = localStorage.getItem('userID')\n        const token = localStorage.getItem('token')\n        \n        fetch(`${USER_URL}/${userID}/`, {\n            method: 'GET',\n            headers: {\n                // 'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`,\n               // 'Content-Type': 'application/x-www-form-urlencoded',\n              }\n        })\n        .then(response=>response.json())\n        .then(result => {\n            console.log(result.result)\n            setUser([...result.result])\n           \n        })\n        .catch(error => {\n            console.log(error.message)\n            setServerMessage('')\n    })\n}\nconst delete_user = ()=>{\n    const userID = localStorage.getItem('userID')\n    const token = localStorage.getItem('token')\n    \n    fetch(`${USER_URL}/${userID}/`, {\n        method: 'DELETE',\n        headers: {\n            // 'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`,\n           // 'Content-Type': 'application/x-www-form-urlencoded',\n          }\n    })\n    .then(response=>response.json())\n    .then(result => {\n        console.log(result.result)\n        setUser([...result.result])\n    })\n    .catch(error => {\n        setServerMessage(error.message)\n})\n}\n\nconst update_user = (profileimage, address,email, contact, occupation, password) =>{\n    const userID = localStorage.getItem('userID')\n    const token = localStorage.getItem('token')\n    \n    fetch(`${USER_URL}/${userID}/`, {\n        method: 'PUT',\n        // mode: \"no-cors\",\n        headers: {\n            // 'Content-Type': 'application/json',\n            'Content-Type':'multipart/form-data',\n            'Authorization': `Bearer ${token}`,\n            // 'Content-Type': 'application/x-www-form-urlencoded',\n          },\n        body: {\n            email: email,\n            profileimage: profileimage,\n            address:address, \n            contact: contact,\n            occupation: occupation,\n            password: password\n        }\n    })\n    // .then(response => response.json())\n    .then((result)=>{\n        setServerMessage(\"user profile updated\")\n        console.log(result.result)\n    })\n    .catch(error => {\n        console.log(error.message)\n        setServerMessage('error updating user profile, please try again')\n    })\n}\n\n\n\n  \n\n    const value = {\n        user,\n        sign_in,\n        sign_up,\n        serverMessage,\n       isLoading,\n        verify_user,\n        setIsLoading,\n        setServerMessage,\n        get_user,\n        update_user,\n        delete_user\n        // delete_user,\n    }\n\n    return (\n        <>\n            <AuthContext.Provider value={value}>\n               {children}\n            </AuthContext.Provider>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}