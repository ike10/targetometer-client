{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/oche/Projects/Targetometer/Client/context/AuthContext.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nvar AuthContext = /*#__PURE__*/createContext({\n  user: null,\n  isLoggedIn: false,\n  signIn: function signIn(event, email, password) {},\n  signUp: function signUp(event, firstname, lastname, email, password, confirmpassword) {},\n  signOut: function signOut() {}\n});\nvar BASE_URL = 'https://targetometer-server.herokuapp.com/';\nexport var AuthContextProvider = function AuthContextProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(null),\n      user = _useState[0],\n      setUser = _useState[1];\n\n  var _useState2 = useState(false),\n      isLoggedIn = _useState2[0],\n      setIsLoggedIn = _useState2[1];\n\n  var signIn = function signIn(email, password) {\n    console.log(email, password);\n  };\n\n  var signUp = function signUp(e, firstname, lastname, email, password, confirmpassword) {\n    e.preventDefault(); // alert('button fired')\n    // console.log(firstname, lastname, email, password, confirmpassword)\n  };\n\n  var signOut = function signOut() {// setIsLoggedIn(false)\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: (user, isLoggedIn, signIn, signOut, signUp),\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(AuthContextProvider, \"lZSXWVBwumyvKYAf3g1vn2I1/bk=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/oche/Projects/Targetometer/Client/context/AuthContext.js"],"names":["createContext","useState","AuthContext","user","isLoggedIn","signIn","event","email","password","signUp","firstname","lastname","confirmpassword","signOut","BASE_URL","AuthContextProvider","children","setUser","setIsLoggedIn","console","log","e","preventDefault"],"mappings":";;;;;;AAAA,SAAUA,aAAV,EAAyBC,QAAzB,QAAyC,OAAzC;AAEA,IAAMC,WAAW,gBAAGF,aAAa,CAAC;AAC9BG,EAAAA,IAAI,EAAE,IADwB;AAE9BC,EAAAA,UAAU,EAAE,KAFkB;AAG9BC,EAAAA,MAAM,EAAE,gBAACC,KAAD,EAAQC,KAAR,EAAeC,QAAf,EAA4B,CAAE,CAHR;AAI9BC,EAAAA,MAAM,EAAE,gBAACH,KAAD,EAAQI,SAAR,EAAmBC,QAAnB,EAA6BJ,KAA7B,EAAoCC,QAApC,EAA8CI,eAA9C,EAAkE,CAAE,CAJ9C;AAK9BC,EAAAA,OAAO,EAAE,mBAAM,CAAE;AALa,CAAD,CAAjC;AAOA,IAAMC,QAAQ,GAAG,4CAAjB;AACA,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,OAAe;AAAA;;AAAA,MAAbC,QAAa,QAAbA,QAAa;;AAAA,kBACtBf,QAAQ,CAAC,IAAD,CADc;AAAA,MACvCE,IADuC;AAAA,MACjCc,OADiC;;AAAA,mBAEVhB,QAAQ,CAAC,KAAD,CAFE;AAAA,MAEvCG,UAFuC;AAAA,MAE3Bc,aAF2B;;AAI9C,MAAMb,MAAM,GAAG,SAATA,MAAS,CAACE,KAAD,EAAQC,QAAR,EAAoB;AAC/BW,IAAAA,OAAO,CAACC,GAAR,CAAYb,KAAZ,EAAmBC,QAAnB;AACH,GAFD;;AAIA,MAAMC,MAAM,GAAE,SAARA,MAAQ,CAACY,CAAD,EAAIX,SAAJ,EAAeC,QAAf,EAAyBJ,KAAzB,EAAgCC,QAAhC,EAA0CI,eAA1C,EAA4D;AACtES,IAAAA,CAAC,CAACC,cAAF,GADsE,CAGtE;AACA;AACH,GALD;;AAOA,MAAMT,OAAO,GAAG,SAAVA,OAAU,GAAK,CACjB;AACH,GAFD;;AAIA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,GAAEV,IAAI,EAAEC,UAAF,EAAcC,MAAd,EAAsBQ,OAAtB,EAA+BJ,MAArC,CAA3B;AAAA,cACKO;AADL;AAAA;AAAA;AAAA;AAAA,WADJ;AAKH,CAxBM;;GAAMD,mB;;KAAAA,mB;AA0Bb,eAAeb,WAAf","sourcesContent":["import {  createContext, useState } from \"react\";\n\nconst AuthContext = createContext({\n    user: null,\n    isLoggedIn: false,\n    signIn: (event, email, password) => {},\n    signUp: (event, firstname, lastname, email, password, confirmpassword) => {},\n    signOut: () => {}\n})\nconst BASE_URL = 'https://targetometer-server.herokuapp.com/'\nexport const AuthContextProvider = ({children}) =>{\n    const [user, setUser] = useState(null)\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\n\n    const signIn = (email, password) =>{\n        console.log(email, password )\n    }\n\n    const signUp =(e, firstname, lastname, email, password, confirmpassword)=>{\n        e.preventDefault()\n        \n        // alert('button fired')\n        // console.log(firstname, lastname, email, password, confirmpassword)\n    }\n\n    const signOut = () =>{\n        // setIsLoggedIn(false)\n    }\n\n    return (\n        <AuthContext.Provider value={user, isLoggedIn, signIn, signOut, signUp}>\n            {children}\n        </AuthContext.Provider>\n    )\n}\n\nexport default AuthContext"]},"metadata":{},"sourceType":"module"}