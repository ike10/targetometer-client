{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport createDataContext from \"./createDataContext\";\nimport trackerApi from \"../api/tracker\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { navigate } from \"../navigationRef\";\n\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'add_error':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        errorMessage: action.payload\n      });\n\n    case 'signup':\n      return {\n        errorMessage: ''\n      };\n\n    case 'signin':\n      return {\n        errorMessage: '',\n        token: action.payload\n      };\n\n    case 'confirmation':\n      return {\n        errorMessage: '',\n        response: action.payload\n      };\n\n    case 'signout':\n      return {\n        token: null,\n        errorMessage: ''\n      };\n\n    case 'clear_error_message':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        errorMessage: ''\n      });\n\n    default:\n      return state;\n  }\n};\n\nconst signup = dispatch => {\n  return async ({\n    phone,\n    password,\n    name\n  }) => {\n    // make api request with phone and password\n    try {\n      const response = await trackerApi.post('/auth/createaccount', {\n        phone,\n        password,\n        name\n      });\n      navigate('VerifyAccount'); // navigation.navigate('VerifyAccount')\n    } catch (err) {\n      dispatch({\n        type: 'add_error',\n        payload: 'Something went wrong with signup'\n      });\n    } // after signing up modify state\n    // handle error if signup fails\n\n  };\n};\n\nconst signin = dispatch => {\n  return async ({\n    phone,\n    password\n  }) => {\n    // make api request with phone and password\n    try {\n      // console.log('button fired')\n      const response = await trackerApi.post('/auth/login', {\n        phone,\n        password\n      });\n      await AsyncStorage.setItem('token', response.data.token);\n      await AsyncStorage.setItem('username', response.data.user.username);\n      dispatch({\n        type: 'signin',\n        payload: response.data.result\n      }); // console.log(response.data) \n      // let user = await AsyncStorage.getItem('user')\n      // console.log(response.data.token)\n\n      navigate('Home', {\n        Screen: \"HomeScreen\"\n      }); //    console.log('user succesfully logged in')\n      // console.log(`the token is ${jwttoken}`)\n    } catch (err) {\n      // console.log(err)\n      dispatch({\n        type: 'add_error',\n        payload: err.message\n      });\n    } // let user = await AsyncStorage.getItem('user')\n    // console.log(user)\n    // console.log('user succesfully logged in')\n    // after signing in modify state\n    // handle error if signin  fails\n\n  };\n};\n\nconst tryLocalSignin = dispatch => async () => {\n  const token = await AsyncStorage.getItem('token');\n\n  if (token) {\n    dispatch({\n      type: 'signin',\n      payload: token\n    });\n    navigate('Home', {\n      Screen: \"HomeScreen\"\n    });\n  } else {\n    navigate('SignIn');\n  }\n};\n\nconst confirmOtp = dispatch => {\n  return async ({\n    token\n  }) => {\n    // make api request with otp token\n    try {\n      const response = await trackerApi.post('/auth/confirmphone', {\n        token\n      });\n      dispatch({\n        type: 'confirmation',\n        payload: response.data\n      });\n      navigate('Confirmation');\n    } catch (error) {\n      dispatch({\n        type: 'add_error',\n        payload: 'Something Went Wrong with Confirming code'\n      });\n    } // handle error if signin  fails\n\n  };\n};\n\nconst signout = dispatch => {\n  return async () => {\n    // make api request with phone and password\n    await AsyncStorage.removeItem('token');\n    dispatch({\n      type: 'signout'\n    }); // console.log('user has been logged out')\n\n    navigate('Authentication', {\n      screen: 'SignIn'\n    }); // handle error if sign out  fails\n  };\n};\n\nconst clearErrorMessage = dispatch => () => {\n  dispatch({\n    type: 'clear_error_message'\n  });\n};\n\nexport const {\n  Provider,\n  Context\n} = createDataContext(authReducer, {\n  signin,\n  signout,\n  signup,\n  confirmOtp,\n  clearErrorMessage,\n  tryLocalSignin\n}, {\n  token: null,\n  errorMessage: '',\n  username: null\n});","map":{"version":3,"sources":["/Users/oche/Projects/Targetometer/Client/context/AuthContext.js"],"names":["createDataContext","trackerApi","AsyncStorage","navigate","authReducer","state","action","type","errorMessage","payload","token","response","signup","dispatch","phone","password","name","post","err","signin","setItem","data","user","username","result","Screen","message","tryLocalSignin","getItem","confirmOtp","error","signout","removeItem","screen","clearErrorMessage","Provider","Context"],"mappings":"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","sourcesContent":["import createDataContext from \"./createDataContext\";\nimport trackerApi from \"../api/tracker\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { navigate } from \"../navigationRef\";\n\nconst authReducer = (state, action) =>{\n    switch (action.type){\n        case 'add_error':\n            return {...state, errorMessage: action.payload }\n        case 'signup':\n            return{errorMessage: ''}\n        case 'signin':\n            return{errorMessage: '', token: action.payload}\n        case 'confirmation':\n            return{errorMessage: '', response: action.payload}\n        case 'signout':\n            return{token: null, errorMessage: ''}\n        case 'clear_error_message':\n            return {...state, errorMessage: ''}\n        default:\n            return state\n    }\n}\n\nconst signup = (dispatch) => {\n    return async ({phone, password, name}) => {\n        // make api request with phone and password\n        try{\n            const response = await trackerApi.post('/auth/createaccount', {phone, password, name})\n            \n            navigate('VerifyAccount')\n            // navigation.navigate('VerifyAccount')\n        }catch (err) {\n           \n            dispatch({\n                type: 'add_error', \n                payload: 'Something went wrong with signup'\n            })\n        }\n        // after signing up modify state\n\n        // handle error if signup fails\n    }\n    \n}\n\nconst signin = (dispatch) =>{\n    return async ({phone, password}) => {\n        // make api request with phone and password\n        try{\n            // console.log('button fired')\n            const response = await trackerApi.post('/auth/login', {phone, password})\n            await AsyncStorage.setItem('token', response.data.token)\n            await AsyncStorage.setItem('username', response.data.user.username )\n            dispatch({type: 'signin', payload: response.data.result})\n            // console.log(response.data) \n            // let user = await AsyncStorage.getItem('user')\n            // console.log(response.data.token)\n            navigate('Home',{Screen:\"HomeScreen\"})\n            \n        //    console.log('user succesfully logged in')\n            \n            // console.log(`the token is ${jwttoken}`)\n        }catch(err){\n            // console.log(err)\n            dispatch({\n                type: 'add_error',\n                payload: err.message\n            })\n        }\n        // let user = await AsyncStorage.getItem('user')\n        // console.log(user)\n        // console.log('user succesfully logged in')\n        // after signing in modify state\n\n        // handle error if signin  fails\n    }\n}\n\n\nconst tryLocalSignin = dispatch => async() =>{\n    const token = await AsyncStorage.getItem('token')\n    if (token){\n        dispatch({type: 'signin', payload: token})\n        navigate('Home',{Screen:\"HomeScreen\"})\n    } else {\n        navigate('SignIn')\n    }\n}\n\nconst confirmOtp = (dispatch) => {\n    return async({token}) => {\n        // make api request with otp token\n        try{\n            const response = await trackerApi.post('/auth/confirmphone', {token})\n            dispatch({type: 'confirmation', payload: response.data})\n            navigate('Confirmation')\n        }catch(error){\n            dispatch({\n                type: 'add_error',\n                payload: 'Something Went Wrong with Confirming code'\n            })\n        }\n\n        // handle error if signin  fails\n    }\n}\n\n\nconst signout = (dispatch) =>{\n    return async() => {\n        // make api request with phone and password\n        await AsyncStorage.removeItem('token')\n        dispatch({type: 'signout'})\n        // console.log('user has been logged out')\n        navigate('Authentication', {screen: 'SignIn'})\n        // handle error if sign out  fails\n    }\n}\n\nconst clearErrorMessage = dispatch => () => {\n    dispatch({type: 'clear_error_message'})\n}\n\nexport const {Provider, Context} = createDataContext(\n    authReducer,\n    { signin, signout, signup, confirmOtp, clearErrorMessage, tryLocalSignin },\n    {token: null, errorMessage: '', username:null}\n)"]},"metadata":{},"sourceType":"module"}