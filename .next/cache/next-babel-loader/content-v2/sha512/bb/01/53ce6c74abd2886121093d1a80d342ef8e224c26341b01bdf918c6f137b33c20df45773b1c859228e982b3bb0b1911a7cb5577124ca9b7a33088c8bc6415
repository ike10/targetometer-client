{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"/Users/oche/Projects/Targetometer/Client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"/Users/oche/Projects/Targetometer/Client/context/ProjectContext.js\",\n    _s = $RefreshSig$(),\n    _this = this,\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState } from \"react\";\nimport { GiToken } from \"react-icons/gi\";\nimport { useAuth } from \"./AuthContext\";\nvar ProjectContextDefaultValues = /*#__PURE__*/createContext({\n  projects: [],\n  singleproject: []\n});\nvar ProjectContext = /*#__PURE__*/createContext(ProjectContextDefaultValues);\n_c = ProjectContext;\nvar BASE_URL = 'https://targetometer-server.herokuapp.com/api/v1/users';\nexport function useProject() {\n  _s();\n\n  return useContext(ProjectContext);\n}\n\n_s(useProject, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport var ProjectProvider = function ProjectProvider(_ref) {\n  _s2();\n\n  var children = _ref.children;\n\n  var _useAuth = useAuth(),\n      user = _useAuth.user;\n\n  var _useState = useState([]),\n      projects = _useState[0],\n      setProject = _useState[1];\n\n  var _useState2 = useState([]),\n      singleproject = _useState2[0],\n      setSingleProject = _useState2[1];\n\n  var _useState3 = useState(''),\n      serverMessage = _useState3[0],\n      setServerMessage = _useState3[1];\n\n  var get_all_projects = function get_all_projects() {\n    var token = localStorage.getItem('token');\n    console.log(token);\n    fetch(\"\".concat(BASE_URL, \"/\").concat(user.userID, \"/projects\"), {\n      method: 'GET',\n      headers: {\n        // 'Content-Type': 'application/json',\n        'Authorization': 'Bearer' + token // 'Content-Type': 'application/x-www-form-urlencoded',\n\n      }\n    }).then(function (response) {\n      response.json();\n    }).then(function (result) {\n      console.log(result);\n      setProject.apply(void 0, _toConsumableArray(result.data));\n    })[\"catch\"](function (error) {\n      setServerMessage(error.message);\n    });\n  };\n\n  var get_single_project = function get_single_project(projectID) {\n    var token = localStorage.getItem('token');\n    fetch(\"\".concat(BASE_URL, \"/\").concat(user.userID, \"/projects/\").concat(projectID), {\n      method: 'GET',\n      headers: {\n        // 'Content-Type': 'application/json',\n        'Authorization': 'Bearer' + token // 'Content-Type': 'application/x-www-form-urlencoded',\n\n      }\n    }).then(function (response) {\n      response.json();\n    }).then(function (result) {\n      console.log(result);\n      setProjects.apply(void 0, _toConsumableArray(result.data));\n    })[\"catch\"](function (error) {\n      setServerMessage(error.message);\n    });\n  };\n\n  var create_single_project = function create_single_project(title, description, startdate, enddate) {\n    var token = localStorage.getItem('token');\n    fetch(\"\".concat(BASE_URL, \"/\").concat(user.userID, \"/projects\"), {\n      method: 'POST',\n      headers: {\n        // 'Content-Type': 'application/json',\n        'Authorization': 'Bearer' + token // 'Content-Type': 'application/x-www-form-urlencoded',\n\n      },\n      body: JSON.stringify({\n        title: title,\n        description: description,\n        startdate: startdate,\n        enddate: enddate\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (result) {\n      setServerMessage(result.message);\n    })[\"catch\"](function (error) {\n      setServerMessage(error.message);\n    });\n  };\n\n  var value = {\n    projects: projects,\n    singleproject: singleproject,\n    serverMessage: serverMessage,\n    get_all_projects: get_all_projects,\n    get_single_project: get_single_project,\n    create_single_project: create_single_project\n  };\n  return /*#__PURE__*/_jsxDEV(ProjectContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, _this);\n};\n\n_s2(ProjectProvider, \"z6d/Dnq7krdK3q3/eo6FYbZA5n4=\", false, function () {\n  return [useAuth];\n});\n\n_c2 = ProjectProvider;\nexport default ProjectContext;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ProjectContext\");\n$RefreshReg$(_c2, \"ProjectProvider\");","map":{"version":3,"sources":["/Users/oche/Projects/Targetometer/Client/context/ProjectContext.js"],"names":["createContext","useContext","useState","GiToken","useAuth","ProjectContextDefaultValues","projects","singleproject","ProjectContext","BASE_URL","useProject","ProjectProvider","children","user","setProject","setSingleProject","serverMessage","setServerMessage","get_all_projects","token","localStorage","getItem","console","log","fetch","userID","method","headers","then","response","json","result","data","error","message","get_single_project","projectID","setProjects","create_single_project","title","description","startdate","enddate","body","JSON","stringify","value"],"mappings":"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","sourcesContent":["import {  createContext, useContext, useState } from \"react\";\nimport { GiToken } from \"react-icons/gi\";\nimport { useAuth } from \"./AuthContext\";\n\nconst ProjectContextDefaultValues = createContext({\n    projects: [],\n    singleproject: [],\n   \n})\n\nconst ProjectContext = createContext(ProjectContextDefaultValues)\n\nconst BASE_URL = 'https://targetometer-server.herokuapp.com/api/v1/users'\n\nexport function useProject(){\n    return useContext(ProjectContext)\n}\n\nexport const ProjectProvider = ({children}) =>{\n    const {user} = useAuth()\n    const [projects, setProject] = useState([])\n    const [singleproject, setSingleProject] = useState([])\n    const [serverMessage, setServerMessage] = useState('')\n\n    const get_all_projects = () =>{\n        const token = localStorage.getItem('token')\n        console.log(token)\n        fetch(`${BASE_URL}/${user.userID}/projects`, {\n            method: 'GET',\n            headers: {\n                // 'Content-Type': 'application/json',\n                'Authorization': 'Bearer'+token,\n               // 'Content-Type': 'application/x-www-form-urlencoded',\n              }\n        })\n        .then((response)=>{response.json()})\n        .then(result => {\n            console.log(result)\n            setProject(...result.data)\n        })\n        .catch(error => {\n            setServerMessage(error.message)\n        })\n    }\n\n    const get_single_project =(projectID)=>{\n        const token = localStorage.getItem('token')\n        \n        fetch(`${BASE_URL}/${user.userID}/projects/${projectID}`, {\n            method: 'GET',\n            headers: {\n                // 'Content-Type': 'application/json',\n                'Authorization': 'Bearer' + token,\n               // 'Content-Type': 'application/x-www-form-urlencoded',\n              }\n        })\n        .then((response)=>{response.json()})\n        .then(result => {\n            console.log(result)\n            setProjects(...result.data)\n        })\n        .catch(error => {\n            setServerMessage(error.message)\n        })\n    }\n\n    const create_single_project = (title, description, startdate, enddate) =>{\n        const token = localStorage.getItem('token')\n        \n        fetch(`${BASE_URL}/${user.userID}/projects`, {\n            method: 'POST',\n            headers: {\n                // 'Content-Type': 'application/json',\n                'Authorization': 'Bearer' + token,\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n              },\n            body: JSON.stringify({\n                \n                title: title,\n                description:description, \n                startdate: startdate,\n                enddate: enddate\n            })\n        })\n        .then(response => response.json())\n        .then((result)=>{\n            setServerMessage(result.message)\n        })\n        .catch(error => {\n            setServerMessage(error.message)\n        })\n    }\n\n    const value = {\n        projects,\n        singleproject,\n        serverMessage,\n        get_all_projects,\n        get_single_project,\n        create_single_project\n    }\n\n    return (\n        <ProjectContext.Provider value={value}>\n            {children}\n        </ProjectContext.Provider>\n    )\n}\n\nexport default ProjectContext"]},"metadata":{},"sourceType":"module"}