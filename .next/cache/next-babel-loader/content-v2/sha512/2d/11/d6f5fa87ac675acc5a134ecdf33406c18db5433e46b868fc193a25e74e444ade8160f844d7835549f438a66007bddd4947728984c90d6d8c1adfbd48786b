{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/oche/Projects/Targetometer/Client/context/ProjectContext.js\";\nimport { createContext, useContext, useState } from \"react\";\nimport { GiToken } from \"react-icons/gi\";\nimport { useAuth } from \"./AuthContext\";\nconst ProjectContextDefaultValues = /*#__PURE__*/createContext({\n  projects: [],\n  singleproject: []\n});\nconst ProjectContext = /*#__PURE__*/createContext(ProjectContextDefaultValues);\nconst BASE_URL = 'https://targetometer-server.herokuapp.com/api/v1/users';\nexport function useProject() {\n  return useContext(ProjectContext);\n}\nexport const ProjectProvider = ({\n  children\n}) => {\n  const {\n    user\n  } = useAuth();\n  const {\n    0: projects,\n    1: setProject\n  } = useState([]);\n  const {\n    0: singleproject,\n    1: setSingleProject\n  } = useState([]);\n  const {\n    0: serverMessage,\n    1: setServerMessage\n  } = useState('');\n  const {\n    0: projectID,\n    1: setProjectID\n  } = useState('');\n\n  const get_all_projects = () => {\n    const userID = localStorage.getItem('userID');\n    const token = localStorage.getItem('token');\n    fetch(`${BASE_URL}/${userID}/projects`, {\n      method: 'GET',\n      headers: {\n        // 'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}` // 'Content-Type': 'application/x-www-form-urlencoded',\n\n      }\n    }).then(response => response.json()).then(result => {\n      console.log('projects');\n      console.log(result.result);\n      setProject([...result.result]);\n    }).catch(error => {\n      setServerMessage(error.message);\n    });\n  };\n\n  const get_single_project = projectID => {\n    const token = localStorage.getItem('token');\n    const userID = localStorage.getItem('userID');\n    fetch(`${BASE_URL}/${userID}/projects/${projectID}`, {\n      method: 'GET',\n      headers: {\n        // 'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}` // 'Content-Type': 'application/x-www-form-urlencoded',\n\n      }\n    }).then(response => response.json()).then(result => {\n      console.log(result);\n      setProjects(...result.result);\n    }).catch(error => {\n      setServerMessage(error.message);\n    });\n  };\n\n  const create_single_project = (title, description, startdate, enddate) => {\n    const token = localStorage.getItem('token');\n    const userID = localStorage.getItem('userID');\n    console.log(title, description, startdate, enddate);\n    fetch(`${BASE_URL}/${userID}/projects`, {\n      method: 'POST',\n      // mode: \"no-cors\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}` // 'Content-Type': 'application/x-www-form-urlencoded',\n\n      },\n      body: JSON.stringify({\n        title: title,\n        description: description,\n        startdate: startdate,\n        enddate: enddate\n      })\n    }).then(response => response.json()).then(result => {\n      setServerMessage(result.message);\n    }).catch(error => {\n      setServerMessage(error.message);\n    });\n  };\n\n  const set_project_to_working = projectID => {\n    const token = localStorage.getItem('token');\n    const userID = localStorage.getItem('userID');\n    fetch(`${BASE_URL}/${userID}/projects/${projectID}/working`, {\n      method: 'PUT',\n      // mode: \"no-cors\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}` // 'Content-Type': 'application/x-www-form-urlencoded',\n\n      },\n      body: JSON.stringify({\n        title: title,\n        description: description,\n        startdate: startdate,\n        enddate: enddate\n      })\n    }).then(response => response.json()).then(result => {\n      setServerMessage(result.message);\n    }).catch(error => {\n      setServerMessage(error.message);\n    });\n  };\n\n  const set_project_to_completed = () => {\n    const token = localStorage.getItem('token');\n    const userID = localStorage.getItem('userID');\n    fetch(`${BASE_URL}/${userID}/projects/${projectID}/completed`, {\n      method: 'PUT',\n      // mode: \"no-cors\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}` // 'Content-Type': 'application/x-www-form-urlencoded',\n\n      },\n      body: JSON.stringify({\n        title: title,\n        description: description,\n        startdate: startdate,\n        enddate: enddate\n      })\n    }).then(response => response.json()).then(result => {\n      setServerMessage(result.message);\n    }).catch(error => {\n      setServerMessage(error.message);\n    });\n  };\n\n  const value = {\n    projects,\n    singleproject,\n    serverMessage,\n    get_all_projects,\n    get_single_project,\n    create_single_project,\n    projectID,\n    setProjectID,\n    set_project_to_working,\n    set_project_to_completed\n  };\n  return /*#__PURE__*/_jsxDEV(ProjectContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 9\n  }, this);\n};\nexport default ProjectContext;","map":{"version":3,"sources":["/Users/oche/Projects/Targetometer/Client/context/ProjectContext.js"],"names":["createContext","useContext","useState","GiToken","useAuth","ProjectContextDefaultValues","projects","singleproject","ProjectContext","BASE_URL","useProject","ProjectProvider","children","user","setProject","setSingleProject","serverMessage","setServerMessage","projectID","setProjectID","get_all_projects","userID","localStorage","getItem","token","fetch","method","headers","then","response","json","result","console","log","catch","error","message","get_single_project","setProjects","create_single_project","title","description","startdate","enddate","body","JSON","stringify","set_project_to_working","set_project_to_completed","value"],"mappings":"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","sourcesContent":["import {  createContext, useContext, useState } from \"react\";\nimport { GiToken } from \"react-icons/gi\";\nimport { useAuth } from \"./AuthContext\";\n\nconst ProjectContextDefaultValues = createContext({\n    projects: [],\n    singleproject: [],\n   \n})\n\nconst ProjectContext = createContext(ProjectContextDefaultValues)\n\nconst BASE_URL = 'https://targetometer-server.herokuapp.com/api/v1/users'\n\nexport function useProject(){\n    return useContext(ProjectContext)\n}\n\nexport const ProjectProvider = ({children}) =>{\n    const {user} = useAuth()\n    const [projects, setProject] = useState([])\n    const [singleproject, setSingleProject] = useState([])\n    const [serverMessage, setServerMessage] = useState('')\n    const [projectID, setProjectID] = useState('')\n    const get_all_projects = () =>{\n        const userID = localStorage.getItem('userID')\n        const token = localStorage.getItem('token')\n      \n        fetch(`${BASE_URL}/${userID}/projects`, {\n            method: 'GET',\n            headers: {\n                // 'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`,\n               // 'Content-Type': 'application/x-www-form-urlencoded',\n              }\n        })\n        .then(response=>response.json())\n        .then(result => {\n            console.log('projects')\n            console.log(result.result)\n            setProject([...result.result])\n        })\n        .catch(error => {\n            setServerMessage(error.message)\n        })\n    }\n\n    const get_single_project =(projectID)=>{\n        const token = localStorage.getItem('token')\n        const userID = localStorage.getItem('userID')\n        fetch(`${BASE_URL}/${userID}/projects/${projectID}`, {\n            method: 'GET',\n            headers: {\n                // 'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`,\n               // 'Content-Type': 'application/x-www-form-urlencoded',\n              }\n        })\n        .then((response)=>response.json())\n        .then(result => {\n            console.log(result)\n            setProjects(...result.result)\n        })\n        .catch(error => {\n            setServerMessage(error.message)\n        })\n    }\n\n    const create_single_project = (title, description, startdate, enddate) =>{\n        const token = localStorage.getItem('token')\n        const userID = localStorage.getItem('userID')\n        console.log(title, description, startdate, enddate)\n        fetch(`${BASE_URL}/${userID}/projects`, {\n            method: 'POST',\n            // mode: \"no-cors\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`,\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n              },\n            body: JSON.stringify({\n                \n                title: title,\n                description:description, \n                startdate: startdate,\n                enddate: enddate\n            })\n        })\n        .then(response => response.json())\n        .then((result)=>{\n            setServerMessage(result.message)\n        })\n        .catch(error => {\n            setServerMessage(error.message)\n        })\n    }\n    const set_project_to_working =(projectID)=>{\n        const token = localStorage.getItem('token')\n        const userID = localStorage.getItem('userID')\n        \n        fetch(`${BASE_URL}/${userID}/projects/${projectID}/working`, {\n            method: 'PUT',\n            // mode: \"no-cors\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`,\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n              },\n            body: JSON.stringify({\n                \n                title: title,\n                description:description, \n                startdate: startdate,\n                enddate: enddate\n            })\n        })\n        .then(response => response.json())\n        .then((result)=>{\n            setServerMessage(result.message)\n        })\n        .catch(error => {\n            setServerMessage(error.message)\n        })\n    }\n\n    const set_project_to_completed = () => {\n        const token = localStorage.getItem('token')\n        const userID = localStorage.getItem('userID')\n   \n        fetch(`${BASE_URL}/${userID}/projects/${projectID}/completed`, {\n            method: 'PUT',\n            // mode: \"no-cors\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`,\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n              },\n            body: JSON.stringify({\n                \n                title: title,\n                description:description, \n               startdate: startdate,\n                enddate: enddate\n            })\n        })\n        .then(response => response.json())\n        .then((result)=>{\n            setServerMessage(result.message)\n        })\n        .catch(error => {\n            setServerMessage(error.message)\n        })\n    }\n\n    const value = {\n        projects,\n        singleproject,\n        serverMessage,\n        get_all_projects,\n        get_single_project,\n       create_single_project,\n        projectID,\n        setProjectID,\n        set_project_to_working,\n        set_project_to_completed\n    }\n\n    return (\n        <ProjectContext.Provider value={value}>\n            {children}\n        </ProjectContext.Provider>\n    )\n}\n\nexport default ProjectContext"]},"metadata":{},"sourceType":"module"}