{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/oche/Projects/Targetometer/Client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/oche/Projects/Targetometer/Client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/oche/Projects/Targetometer/Client/context/AuthContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState } from \"react\";\nimport router, { useRouter } from 'next/router';\nimport axios from \"axios\";\nvar AuthContextDefaultValues = {\n  user: []\n};\nvar AuthContext = /*#__PURE__*/createContext(AuthContextDefaultValues);\n_c = AuthContext;\nvar BASE_URL = 'https://targetometer-server.herokuapp.com/api/v1/auth';\nexport function useAuth() {\n  _s();\n\n  return useContext(AuthContext);\n}\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function AuthProvider(_ref) {\n  _s2();\n\n  var children = _ref.children;\n\n  var _useState = useState([]),\n      user = _useState[0],\n      setUser = _useState[1];\n\n  var _useState2 = useState([]),\n      userInfo = _useState2[0],\n      setUserInfo = _useState2[1];\n\n  var _useState3 = useState(false),\n      isLoading = _useState3[0],\n      setIsLoading = _useState3[1]; // const [single_route, setSingle_route] = useState([])\n\n\n  var _useState4 = useState(''),\n      serverMessage = _useState4[0],\n      setServerMessage = _useState4[1];\n\n  var sign_up = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(email, password, firstname, lastname, confirmpassword) {\n      var response, result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              try {\n                response = fetch(\"\".concat(BASE_URL, \"/createaccount\"), {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json' // 'Content-Type': 'application/x-www-form-urlencoded',\n\n                  },\n                  body: JSON.stringify({\n                    firstname: firstname,\n                    lastname: lastname,\n                    password: password,\n                    email: email\n                  })\n                });\n                result = response.json();\n                console.log(result);\n                setIsLoading(!isLoading);\n                setServerMessage(\"Account Created Successfully, please login to access dashboard\");\n                setTimeout(function () {\n                  router.push(\"/\");\n                }, 30000);\n              } catch (err) {\n                setServerMessage(err.message);\n              } //     fetch(`${BASE_URL}/createaccount`, {\n              //         method: 'POST',\n              //         headers: {\n              //             'Content-Type': 'application/json'\n              //             // 'Content-Type': 'application/x-www-form-urlencoded',\n              //           },\n              //         body: JSON.stringify({\n              //             firstname: firstname,\n              //             lastname: lastname,\n              //             password: password,\n              //             email:email, \n              //         })\n              //     })\n              //     .then(response => response.json())\n              //     .then(data => {\n              //     setServerMessage(\"Account Created Successfully, please login to access dashboard\")\n              //     setTimeout(()=>{\n              //         router.push(`/`)\n              //     }, 30000)\n              //    })\n              //     .catch(err=>{\n              //         setServerMessage(err.message)\n              //     })\n\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function sign_up(_x, _x2, _x3, _x4, _x5) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var sign_in = function sign_in(email, password) {\n    fetch(\"\".concat(BASE_URL, \"/login\"), {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json' // 'Content-Type': 'application/x-www-form-urlencoded',\n\n      },\n      body: JSON.stringify({\n        password: password,\n        email: email\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (result) {\n      localStorage.setItem('token', result.token);\n      setUser(result.data);\n      localStorage.setItem('firstname', result.data.firstname);\n      localStorage.setItem('lastname', result.data.lastname);\n      localStorage.setItem('userID', result.data.userID);\n      var firstname = localStorage.getItem('firstname');\n      var lastname = localStorage.getItem('lastname');\n      setServerMessage(result.message);\n      router.push(\"/\".concat(firstname, \"_\").concat(lastname));\n    })[\"catch\"](function (err) {\n      setServerMessage(err.message);\n    }); //     const result = response.json()\n    //     console.log(result)\n    //     await localStorage.setItem('token', result.data.token)\n    //     await localStorage.setItem('user', result.data.user)\n    //     setServerMessage(result.data.message)\n    //     router.push(`/:${user.name}`)\n    //   }catch(err){\n    //     setServerMessage(err.message)\n    //   }\n  }; // const get_single_route = (routeId) =>{\n  //     console.log(routeId)\n  //     let url = `https://backend.cruise9ja.com/api/v1/routes/${abuwala1}`\n  //     fetch(url)\n  //       .then(response => response.json())\n  //       .then(data => {\n  //           console.log(data)\n  //           setSingle_route([...data.result])\n  //           console.log(single_route)\n  //       })\n  //       .catch(err => {\n  //           setErrorMessage(err.message)\n  //         })\n  //     // const router = useRouter()\n  //     // router.push('/searchresults')\n  // }\n\n\n  var value = {\n    user: user,\n    sign_in: sign_in,\n    sign_up: sign_up,\n    serverMessage: serverMessage,\n    isLoading: isLoading\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: value,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s2(AuthProvider, \"qPAxuCRrH2eOpwqgfownzXbnleU=\");\n\n_c2 = AuthProvider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AuthContext\");\n$RefreshReg$(_c2, \"AuthProvider\");","map":{"version":3,"sources":["/Users/oche/Projects/Targetometer/Client/context/AuthContext.js"],"names":["createContext","useContext","useState","router","useRouter","axios","AuthContextDefaultValues","user","AuthContext","BASE_URL","useAuth","AuthProvider","children","setUser","userInfo","setUserInfo","isLoading","setIsLoading","serverMessage","setServerMessage","sign_up","email","password","firstname","lastname","confirmpassword","response","fetch","method","headers","body","JSON","stringify","result","json","console","log","setTimeout","push","err","message","sign_in","then","localStorage","setItem","token","data","userID","getItem","value"],"mappings":"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","sourcesContent":["import { createContext, useContext, useState } from \"react\";\nimport router, {useRouter} from 'next/router'\nimport axios from \"axios\";\nconst AuthContextDefaultValues={\n    user:[],\n \n   \n}\n\nconst AuthContext = createContext(AuthContextDefaultValues)\n\nconst BASE_URL = 'https://targetometer-server.herokuapp.com/api/v1/auth'\nexport function useAuth(){\n    return useContext(AuthContext)\n}\n\nexport function AuthProvider({children}){\n    const [user, setUser] = useState([])\n    const [userInfo, setUserInfo] = useState([])\n    const [isLoading, setIsLoading] = useState(false)\n    // const [single_route, setSingle_route] = useState([])\n    const [serverMessage, setServerMessage] = useState('')\n    const sign_up =  async(email, password, firstname, lastname, confirmpassword) =>{\n\n        try{\n            let response = fetch(`${BASE_URL}/createaccount`, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json'\n                            // 'Content-Type': 'application/x-www-form-urlencoded',\n                          },\n                        body: JSON.stringify({\n                            firstname: firstname,\n                            lastname: lastname,\n                            password: password,\n                            email:email, \n                            \n                        })\n                   })\n                const result = response.json()\n                console.log(result)\n                setIsLoading(!isLoading)\n                setServerMessage(\"Account Created Successfully, please login to access dashboard\")\n                setTimeout(()=>{\n                            router.push(`/`)\n                        }, 30000)\n        }catch(err){\n            setServerMessage(err.message)\n        }\n\n\n    //     fetch(`${BASE_URL}/createaccount`, {\n    //         method: 'POST',\n    //         headers: {\n    //             'Content-Type': 'application/json'\n    //             // 'Content-Type': 'application/x-www-form-urlencoded',\n    //           },\n    //         body: JSON.stringify({\n    //             firstname: firstname,\n    //             lastname: lastname,\n    //             password: password,\n    //             email:email, \n                \n    //         })\n    //     })\n    //     .then(response => response.json())\n    //     .then(data => {\n           \n    //     setServerMessage(\"Account Created Successfully, please login to access dashboard\")\n    //     setTimeout(()=>{\n    //         router.push(`/`)\n    //     }, 30000)\n        \n    //    })\n    //     .catch(err=>{\n    //         setServerMessage(err.message)\n    //     })\n    }\n    const sign_in = (email, password) =>{\n        \n        fetch(`${BASE_URL}/login`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n              },\n            body: JSON.stringify({\n                \n                password: password,\n                email:email, \n               \n            })\n        })\n        .then(response => response.json())\n        .then(result => {\n        \n         localStorage.setItem('token', result.token)\n        \n        setUser(result.data)\n        localStorage.setItem('firstname', result.data.firstname )\n        localStorage.setItem('lastname',result.data.lastname)\n        localStorage.setItem('userID', result.data.userID)\n\n        \n        const firstname = localStorage.getItem('firstname')\n        const lastname = localStorage.getItem('lastname')\n        \n        setServerMessage(result.message)\n        router.push(`/${firstname}_${lastname}`)\n       })\n        .catch(err=>{\n            setServerMessage(err.message)\n        })\n        //     const result = response.json()\n        //     console.log(result)\n        //     await localStorage.setItem('token', result.data.token)\n        //     await localStorage.setItem('user', result.data.user)\n        //     setServerMessage(result.data.message)\n        //     router.push(`/:${user.name}`)\n        //   }catch(err){\n        //     setServerMessage(err.message)\n        //   }\n         \n    }\n\n    // const get_single_route = (routeId) =>{\n\n    //     console.log(routeId)\n\n    //     let url = `https://backend.cruise9ja.com/api/v1/routes/${abuwala1}`\n    //     fetch(url)\n    //       .then(response => response.json())\n    //       .then(data => {\n    //           console.log(data)\n    //           setSingle_route([...data.result])\n    //           console.log(single_route)\n    //       })\n    //       .catch(err => {\n    //           setErrorMessage(err.message)\n              \n    //         })\n    //     // const router = useRouter()\n    //     // router.push('/searchresults')\n    // }\n\n    const value = {\n        user,\n        sign_in,\n        sign_up,\n        serverMessage,\n        isLoading\n    }\n\n    return (\n        <>\n            <AuthContext.Provider value={value}>\n               {children}\n            </AuthContext.Provider>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}