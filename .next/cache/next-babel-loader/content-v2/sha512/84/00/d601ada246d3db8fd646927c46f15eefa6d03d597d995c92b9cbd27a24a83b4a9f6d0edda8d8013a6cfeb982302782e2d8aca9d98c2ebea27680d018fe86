{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/oche/Projects/Targetometer/Client/context/routeContext.js\";\nimport { createContext, useContext, useState } from \"react\";\nimport { useRouter } from 'next/router';\nimport axios from \"axios\";\nconst routeContextDefaultValues = {\n  routes: [],\n  single_route: []\n};\nconst RouteContext = /*#__PURE__*/createContext(routeContextDefaultValues);\nexport function useRoute() {\n  return useContext(RouteContext);\n}\nexport function RouteProvider({\n  children\n}) {\n  const {\n    0: routes,\n    1: setRoutes\n  } = useState([]);\n  const {\n    0: single_route,\n    1: setSingle_route\n  } = useState([]);\n  const {\n    0: errorMessage,\n    1: setErrorMessage\n  } = useState('');\n\n  const get_routes = () => {\n    let url = 'https://backend.cruise9ja.com/api/v1/routes';\n    fetch(url).then(response => response.json()).then(data => {\n      console.log(data.result);\n      setRoutes([...data.result]);\n    }).catch(err => {\n      setErrorMessage(err.message);\n    }); // const router = useRouter()\n    // router.push('/searchresults')\n  };\n\n  const get_single_route = routeId => {\n    console.log(routeId);\n    let url = `https://backend.cruise9ja.com/api/v1/routes/${abuwala1}`;\n    fetch(url).then(response => response.json()).then(data => {\n      console.log(data);\n      setSingle_route([...data.result]);\n      console.log(single_route);\n    }).catch(err => {\n      setErrorMessage(err.message);\n    }); // const router = useRouter()\n    // router.push('/searchresults')\n  };\n\n  const value = {\n    routes,\n    get_routes,\n    get_single_route\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(RouteContext.Provider, {\n      value: value,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}","map":{"version":3,"sources":["/Users/oche/Projects/Targetometer/Client/context/routeContext.js"],"names":["createContext","useContext","useState","useRouter","axios","routeContextDefaultValues","routes","single_route","RouteContext","useRoute","RouteProvider","children","setRoutes","setSingle_route","errorMessage","setErrorMessage","get_routes","url","fetch","then","response","json","data","console","log","result","catch","err","message","get_single_route","routeId","abuwala1","value"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,QAAoD,OAApD;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,MAAMC,yBAAyB,GAAC;AAC5BC,EAAAA,MAAM,EAAC,EADqB;AAE5BC,EAAAA,YAAY,EAAC;AAFe,CAAhC;AAKA,MAAMC,YAAY,gBAAGR,aAAa,CAACK,yBAAD,CAAlC;AAEA,OAAO,SAASI,QAAT,GAAmB;AACtB,SAAOR,UAAU,CAACO,YAAD,CAAjB;AACH;AAED,OAAO,SAASE,aAAT,CAAuB;AAACC,EAAAA;AAAD,CAAvB,EAAkC;AACrC,QAAM;AAAA,OAACL,MAAD;AAAA,OAASM;AAAT,MAAsBV,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAA,OAACK,YAAD;AAAA,OAAeM;AAAf,MAAkCX,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM;AAAA,OAACY,YAAD;AAAA,OAAeC;AAAf,MAAkCb,QAAQ,CAAC,EAAD,CAAhD;;AACA,QAAMc,UAAU,GAAG,MAAK;AACpB,QAAIC,GAAG,GAAG,6CAAV;AACAC,IAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,MAAjB;AACAb,MAAAA,SAAS,CAAC,CAAC,GAAGU,IAAI,CAACG,MAAT,CAAD,CAAT;AACH,KALH,EAMGC,KANH,CAMSC,GAAG,IAAI;AACVZ,MAAAA,eAAe,CAACY,GAAG,CAACC,OAAL,CAAf;AAED,KATL,EAFoB,CAYpB;AACA;AACH,GAdD;;AAgBA,QAAMC,gBAAgB,GAAIC,OAAD,IAAY;AAEjCP,IAAAA,OAAO,CAACC,GAAR,CAAYM,OAAZ;AAEA,QAAIb,GAAG,GAAI,+CAA8Cc,QAAS,EAAlE;AACAb,IAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAT,MAAAA,eAAe,CAAC,CAAC,GAAGS,IAAI,CAACG,MAAT,CAAD,CAAf;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYjB,YAAZ;AACH,KANH,EAOGmB,KAPH,CAOSC,GAAG,IAAI;AACVZ,MAAAA,eAAe,CAACY,GAAG,CAACC,OAAL,CAAf;AAED,KAVL,EALiC,CAgBjC;AACA;AACH,GAlBD;;AAoBA,QAAMI,KAAK,GAAG;AACV1B,IAAAA,MADU;AAEVU,IAAAA,UAFU;AAGVa,IAAAA;AAHU,GAAd;AAMA,sBACI;AAAA,2BACI,QAAC,YAAD,CAAc,QAAd;AAAuB,MAAA,KAAK,EAAEG,KAA9B;AAAA,gBACKrB;AADL;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAOH","sourcesContent":["import { createContext, useContext, useState } from \"react\";\nimport {useRouter} from 'next/router'\nimport axios from \"axios\";\nconst routeContextDefaultValues={\n    routes:[],\n    single_route:[]\n}\n\nconst RouteContext = createContext(routeContextDefaultValues)\n\nexport function useRoute(){\n    return useContext(RouteContext)\n}\n\nexport function RouteProvider({children}){\n    const [routes, setRoutes] = useState([])\n    const [single_route, setSingle_route] = useState([])\n    const [errorMessage, setErrorMessage] = useState('')\n    const get_routes = () =>{\n        let url = 'https://backend.cruise9ja.com/api/v1/routes'\n        fetch(url)\n          .then(response => response.json())\n          .then(data => {\n              console.log(data.result)\n              setRoutes([...data.result])\n          })\n          .catch(err => {\n              setErrorMessage(err.message)\n              \n            })\n        // const router = useRouter()\n        // router.push('/searchresults')\n    }\n\n    const get_single_route = (routeId) =>{\n\n        console.log(routeId)\n\n        let url = `https://backend.cruise9ja.com/api/v1/routes/${abuwala1}`\n        fetch(url)\n          .then(response => response.json())\n          .then(data => {\n              console.log(data)\n              setSingle_route([...data.result])\n              console.log(single_route)\n          })\n          .catch(err => {\n              setErrorMessage(err.message)\n              \n            })\n        // const router = useRouter()\n        // router.push('/searchresults')\n    }\n\n    const value = {\n        routes,\n        get_routes,\n        get_single_route\n    }\n\n    return (\n        <>\n            <RouteContext.Provider value={value}>\n                {children}\n            </RouteContext.Provider>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}